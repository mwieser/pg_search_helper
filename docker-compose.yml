services:
  service:
    build:
      context: .
      target: development
    ports:
      - "8080:8080"
    working_dir: &PROJECT_ROOT_DIR /app
    # linux permissions / vscode support: we must explicitly run as the development user
    user: development
    volumes:
      # mount working directory
      # https://code.visualstudio.com/docs/remote/containers-advanced#_update-the-mount-consistency-to-delegated-for-macos
      # https://docs.docker.com/docker-for-mac/osxfs-caching/#delegated
      # the containerâ€™s view is authoritative (permit delays before updates on the container appear in the host)
      - .:/app:delegated

      # mount cached vscode container extensions
      # https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
      - vscode-extensions:/home/development/.vscode-server/extensions
      - vscode-extensions-insiders:/home/development/.vscode-server-insiders/extensions

      # https://code.visualstudio.com/remote/advancedcontainers/persist-bash-history
      # keep user development .bash_history between container restarts
      - bash-history:/home/development/commandhistory

      - pgextensions:/usr/share/postgresql/17/extension

    depends_on:
      - postgres
    environment:
      # required: env for main working database, service
      # default for sql-migrate (target development) and psql cli tool
      PGDATABASE: &PGDATABASE "development"
      PGUSER: &PGUSER "dbuser"
      PGPASSWORD: &PGPASSWORD "dbpass"
      PGHOST: &PGHOST "postgres"
      PGPORT: &PGPORT "5432"
      PGSSLMODE: &PGSSLMODE "disable"

      # optional: project root directory, used for relative path resolution (e.g. fixtures)
      PROJECT_ROOT_DIR: *PROJECT_ROOT_DIR

      # optional: env for integresql client testing
      # INTEGRESQL_CLIENT_BASE_URL: "http://integresql:5000/api"

    # Overrides default command so things don't shut down after the process ends.
    command:
      - /bin/sh
      - -c
      - |
        git config --global --add safe.directory /app
        while sleep 1000; do :; done

  postgres:
    image: postgres:17.4-bookworm
    # ATTENTION
    # fsync=off, synchronous_commit=off and full_page_writes=off
    # gives us a major speed up during local development and testing (~30%),
    # however you should NEVER use these settings in PRODUCTION unless
    # you want to have CORRUPTED data.
    # DO NOT COPY/PASTE THIS BLINDLY.
    # YOU HAVE BEEN WARNED.
    # Apply some performance improvements to pg as these guarantees are not needed while running locally
    command: "postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off' -c 'max_connections=100' -c 'client_min_messages=warning'"
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: *PGDATABASE
      POSTGRES_USER: *PGUSER
      POSTGRES_PASSWORD: *PGPASSWORD
    volumes:
      - pgvolume:/var/lib/postgresql/data

volumes:
  # postgresql: declare a named volume to persist DB data
  pgvolume:

  pgextensions:

  # vscode: Avoiding extension reinstalls on container rebuild
  # https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
  vscode-extensions:
  vscode-extensions-insiders:

  # https://code.visualstudio.com/remote/advancedcontainers/persist-bash-history
  bash-history: